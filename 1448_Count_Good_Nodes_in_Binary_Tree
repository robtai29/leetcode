/*************************************************************
8.12.22
https://leetcode.com/problems/count-good-nodes-in-binary-tree/
**************************************************************/

class Solution {
    public int goodNodes(TreeNode root) {
        Deque<Pair<TreeNode, Integer>> stack = new LinkedList<>();
        stack.addFirst(new Pair<>(root, root.val));
        int res = 0;
        
        while (!stack.isEmpty()){
            Pair<TreeNode, Integer> p = stack.removeFirst();
            TreeNode current = p.getKey();
            int max = p.getValue();
            if (current.val >= max){
                res++;
            }
            
            max = Math.max(max, current.val);
             if (current.right != null){
                stack.addFirst(new Pair<>(current.right, max));
            }
            
            if (current.left != null){
                stack.addFirst(new Pair<>(current.left, max));
            }
        }
        return res;
    }
}

/*
class Solution {
    public int goodNodes(TreeNode root) {
        return dfs(root, root.val);
    }
    
    private int dfs(TreeNode node, int max){
        if (node == null){
            return 0;
        }
        
        if (node.val >= max){
            return 1 + dfs(node.left, node.val) + dfs(node.right, node.val);
        }else{
            
            return dfs(node.left, max) + dfs(node.right, max);
        }
        
        
        
    }
}
*/