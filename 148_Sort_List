
/*************************************************************
9.24.22
https://leetcode.com/problems/sort-list/
**************************************************************/


class Solution {
    public ListNode sortList(ListNode head) {
        if (head == null || head.next == null){
            return head;
        }
        
        ListNode prev = null;
        ListNode slow = head, fast = head;
        
        while (fast != null && fast.next != null){
            prev = slow;
            fast = fast.next.next;
            slow = slow.next;
        }
        prev.next = null;
            
        ListNode l1 = sortList(head);
        ListNode l2 = sortList(slow);
        
        return merge(l1, l2);
    }
    
    private ListNode merge(ListNode l1, ListNode l2){
        
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        
        while (l1 != null && l2 != null){
            if (l1.val > l2.val){
                current.next = l2;
                l2 = l2.next;
                
            }else{
        
                current.next = l1;
                l1 = l1.next;
                    
            }
            
            current = current.next;
        }
        
        if (l1 != null){
            current.next = l1;
        }
        
        if (l2 != null){
            current.next = l2;
        }
        
        return dummy.next;
    }
    
    
}