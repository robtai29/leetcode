/*************************************************************
12.28.24
https://leetcode.com/problems/game-of-life/
**************************************************************/

class Solution {
    public void gameOfLife(int[][] board) {
        for (int i = 0; i < board.length; i++){
            for (int j = 0; j < board[0].length; j++){
                int lives = getLivingNeighbors(board, i, j);
                if (board[i][j] == 1 && lives > 1 && lives < 4){
                    board[i][j] = 3;
                }else if (board[i][j] == 0 && lives == 3){
                    board[i][j] = 2;
                }
            }
        }

        for (int i = 0; i < board.length; i++){
            for (int j = 0; j < board[0].length; j++){
                board[i][j] = board[i][j] >> 1;
            }
        }
    }

    private int getLivingNeighbors(int[][] board, int x, int y){
        int lives = 0;
        int[][] dirs = new int[][]{{1,0}, {-1,0}, {1,1}, {-1,-1}, {0,1}, {0,-1}, {1,-1}, {-1,1}};
        for (int i = 0; i < dirs.length; i++){
            int currentX = dirs[i][0] + x;
            int currentY = dirs[i][1] + y;
            if (currentX >= 0 && currentX < board.length && currentY >= 0 && currentY < board[0].length 
            && ((board[currentX][currentY]) & 1) == 1){
                lives++;
            }
        }
        return lives;
    }
}