/*************************************************************
12.29.24
https://leetcode.com/problems/path-sum-ii/
**************************************************************/

class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        pathSum(root, targetSum, list, res);
        return res;
    }

    private void pathSum(TreeNode node, int targetSum, List<Integer> list, List<List<Integer>> res){
        if (node == null){
            return;
        }

        boolean isLeaf = node.left == null && node.right == null;
        list.add(node.val);
        if (isLeaf){
            int sum = (int)list.stream().mapToInt(num -> num).sum();
            if (sum == targetSum){
                res.add(new ArrayList<>(list));
            }
        }
        pathSum(node.left, targetSum, list, res);
        pathSum(node.right, targetSum, list, res);
        list.remove(list.size() - 1);
    }
}