
/*************************************************************
10.1.22
https://leetcode.com/problems/flood-fill/
**************************************************************/


class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int oldColor = image[sr][sc];
        if (oldColor == color){
            return image;
        }
        
        int m = image.length;
        int n = image[0].length;
        
        int[][] dirs = {{1,0}, {-1,0}, {0, 1}, {0, -1}};
        
        LinkedList<int[]> queue = new LinkedList<>();
        queue.offer(new int[]{sr, sc});
        
        while (!queue.isEmpty()){
            int[] point = queue.poll();
            int r = point[0];
            int c = point[1];
            
            image[r][c] = color;
            
            for (int i = 0; i < 4; i++){
                int nextR = r + dirs[i][0];
                int nextC = c + dirs[i][1];
                
                if (0 <= nextR && nextR < m && 0 <= nextC && nextC < n && image[nextR][nextC] == oldColor){
                    queue.offer(new int[]{nextR, nextC});
                }
                
            }
    
        }
        
        return image;
    }
}