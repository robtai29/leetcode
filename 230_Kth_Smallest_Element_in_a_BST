    
/*************************************************************
7.31.22, 12.26.24
https://leetcode.com/problems/kth-smallest-element-in-a-bst/
**************************************************************/
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        Deque<TreeNode> stack = new LinkedList<>();
        TreeNode current = root;
        
        while (!stack.isEmpty() || current !=null){
            if (current != null){
                stack.push(current);
                current = current.left;
            }else{
                current = stack.pop();
                k--;
                if (k == 0){
                    return current.val;
                }
                current = current.right;
            }
        }
        return -1;
    }
}

/*
class Solution {
    int count = 0;
    int res = 0;
    public int kthSmallest(TreeNode root, int k) {
        dfsHelper(root, k);
        return res;
    }
    
    private void dfsHelper(TreeNode node, int k){
        if (node == null){
            return;
        }
        
        dfsHelper(node.left, k);
        
        count++;
        if (count == k){
            res = node.val;
        }
        dfsHelper(node.right, k);
        
        
        
    }
}
*/


// 12.26.25
/*
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        int[] res = new int[]{-1, k};
        dfs(root, res);
        return res[0];
    }
    
    private void dfs(TreeNode node, int[] res){
        if (node == null){
            return;
        }
        
        dfs(node.left, res);
        res[1]--;
        if (res[1] == 0){
            res[0] = node.val;
            return;
        }
        dfs(node.right, res);   
    }
}
 */