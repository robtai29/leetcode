
/*************************************************************
7.29.22
https://leetcode.com/problems/intersection-of-multiple-arrays/
**************************************************************/


class Solution {
    public List<Integer> intersection(int[][] nums) {
        int[] count = new int[1_001];
        Arrays.stream(nums).forEach(arr -> Arrays.stream(arr).forEach(num -> count[num]++));
        
        return IntStream.range(0, count.length).filter(n -> count[n] == nums.length).boxed().collect(Collectors.toList());
    }
}


// 12.14.24
/* 
class Solution {
    public List<Integer> intersection(int[][] nums) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int[] arr : nums){
            for (int num : arr){
                map.put(num, map.getOrDefault(num, 0)+1);
            }
        }
        
        List<Integer> res = new LinkedList<>();
        for (Map.Entry<Integer, Integer> entry : map.entrySet()){
            if (entry.getValue() == nums.length){
                res.add(entry.getKey());
            }
        }
        
        Collections.sort(res);
        return res;
    }
}
*/