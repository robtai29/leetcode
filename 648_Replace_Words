
/*************************************************************
8.20.22
https://leetcode.com/problems/replace-words/
**************************************************************/

class Solution {
    public String replaceWords(List<String> dictionary, String sentence) {
        Trie t1 = new Trie();
        for (String word : dictionary){
            t1.addWord(word);
        }
        
        StringBuilder sb = new StringBuilder();
        
        for (String word : sentence.split(" ")){
            sb.append(t1.getShortestRoot(word));
            sb.append(" ");
        }
            sb.deleteCharAt(sb.length() -1);
            return sb.toString();
    }
}

class Trie{
    private Node root;
    
    public Trie(){
        root = new Node();
    }
    
    public void addWord(String str){
        Node current = root;
        
        for (char ch : str.toCharArray()){
            if (!current.leaves.containsKey(ch)){
                current.leaves.put(ch, new Node());
            }
            
            current = current.leaves.get(ch);
        }
        
        current.isWord = true;
    }
    
    public String getShortestRoot(String str){
        StringBuilder sb = new StringBuilder();
        
        Node current = root;
        for (char ch : str.toCharArray()){        
            
            if (!current.leaves.containsKey(ch)){
                return str;
            }
            
            current = current.leaves.get(ch);
            sb.append(ch);
            if (current.isWord == true){
                return sb.toString();
            }
            
        }
        
        return str;
        
    }
    
    
    private static class Node{
        HashMap<Character, Node> leaves;
        boolean isWord;
        
        public Node(){
            leaves = new HashMap<>();
            isWord = false;
        }
    }
}