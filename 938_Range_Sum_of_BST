
/*************************************************************
8.29.22
https://leetcode.com/problems/range-sum-of-bst/
**************************************************************/

class Solution {
    public int rangeSumBST(TreeNode root, int low, int high) {
        if (root == null){
            return 0;
        }
        
        Deque<TreeNode> stack = new LinkedList<>();
        stack.addFirst(root);
        int sum = 0;
        
        while (!stack.isEmpty()){
            TreeNode current = stack.removeFirst();
            if (current.val >= low && current.val <= high){
                sum += current.val;
            }
            
            if (current.val <= high && current.right != null){
                stack.addFirst(current.right);
            }
            
            if (current.val >= low && current.left != null){
                stack.addFirst(current.left);
            }
        }
            return sum;
    }
}

/*
class Solution {
    public int rangeSumBST(TreeNode root, int low, int high) {
        if (root == null){
            return 0;
        }
        
        if (root.val < low){
            return rangeSumBST(root.right, low, high);
        }else if (root.val > high){
            return rangeSumBST(root.left, low, high);
        }else{
            return root.val + rangeSumBST(root.right, low, high) + rangeSumBST(root.left, low, high);
        }
        
    }
}
*/