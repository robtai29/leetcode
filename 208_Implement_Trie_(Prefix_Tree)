
/*************************************************************
8.12.22
https://leetcode.com/problems/implement-trie-prefix-tree/
**************************************************************/


class Trie {
    private Node root;
    public Trie() {
        root = new Node();
    }
    
    private Node find(String prefix){
        Node current = root;
        for (char ch : prefix.toCharArray()){
            if (!current.leaves.containsKey(ch)){
                return null;
            }
            
            current = current.leaves.get(ch);
        }
        
        return current;
    }
    
    public void insert(String word) {
        Node current = root;
        for (char ch : word.toCharArray()){
            if (!current.leaves.containsKey(ch)){
                current.leaves.put(ch, new Node());
            }
            
            current = current.leaves.get(ch);
        }
        
        current.isWord = true;
    }
    
    public boolean search(String word) {
        Node current = find(word);
        return current != null && current.isWord == true;
    }
    
    public boolean startsWith(String prefix) {
        Node current = find(prefix);
        return current != null;
    }
    
     private static class Node{
        private HashMap<Character, Node> leaves;
        private boolean isWord;
        
        public Node(){
            leaves = new HashMap<>();
            isWord = false;
        }
        
    }
}
